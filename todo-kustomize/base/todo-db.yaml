apiVersion: v1
kind: Secret
metadata:
  labels:
    app: todo-db
  name: todo-db
  namespace: todo
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
type: Opaque
data:
  database-name: dG9kbw==
  database-password: dG9kb1Bhc3N3b3Jk
  database-user: dG9kbw==
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: todo-db
  namespace: todo
  annotations:
    #volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/aws-ebs
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: todo-db
    app.kubernetes.io/component: todo
    app.kubernetes.io/instance: todo-db
    app.kubernetes.io/part-of: todo-app
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  # storageClassName: gp3-csi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/part-of: todo-app
    app.openshift.io/runtime: postgresql
    app: todo-db
  name: todo-db
  namespace: todo
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: todo-db
        version: v1
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: todo-db
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: todo-db
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: todo-db
        image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "1"
            memory: 1024Mi
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: todo-db-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        drop: ALL
        readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: todo-db-data
        persistentVolumeClaim:
          claimName: todo-db
---
apiVersion: v1
kind: Service
metadata:
  name: todo-db
  namespace: todo
  labels:
    app: todo-db
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "2"
spec:
  ports:
  - name: tcp
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: todo-db
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
